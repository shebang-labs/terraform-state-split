name: Archive and Attach to Release for Brew Formula

on:
  release:
    types:
      - created

jobs:
  archiveAndAttach:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v2
        with:
          ref: main  # Replace with the branch name you want to base the new branch on

      - name: Create and Switch to New Branch
        run: |
          git switch main

      - name: Prepend Line to File
        run: |
          echo -e "#!/usr/bin/env ruby\n$(cat resource_mover.rb)" > terraform-state-split

      - name: Create Archive
        run: tar -czvf terraform-state-split.tar.gz terraform-state-split

      - name: Upload Archive
        uses: actions/upload-artifact@v2
        with:
          name: terraform-state-split
          path: terraform-state-split.tar.gz

      - name: Get Release ID
        id: release
        run: echo "::set-output name=id::${{ github.event.release.id }}"

      - name: Download Archive
        uses: actions/download-artifact@v2
        with:
          name: terraform-state-split
          path: temp

      - name: Attach Archive to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: temp/terraform-state-split.tar.gz
          asset_name: terraform-state-split.tar.gz
          asset_content_type: application/gzip

      - name: Configure Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Add Archive to Repository
        run: |
          cp temp/terraform-state-split.tar.gz terraform-state-split.tar.gz
          git add terraform-state-split.tar.gz
          git commit -m "Add archive to repository"
          git push origin update-branch

      - name: Clean up
        run: |
          git checkout main
          git branch -D update-branch
          rm -rf temp terraform-state-split.tar.gz